version: "3"
services:
  reverseproxy:
      image: virenderm01/reverseproxy
      ports:
          - 8080:8080
      restart: always
      depends_on:
        - backend-user
        - backend-feed     
  backend-user:
    image: virenderm01/udacity-restapi-user
    volumes:
      - //c/Users/viren/.aws://root/.aws
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_HOST: ${POSTGRES_HOST}
      AWS_REGION: ${AWS_REGION}
      AWS_PROFILE: ${AWS_PROFILE} 
      AWS_BUCKET: ${AWS_MEDIA_BUCKET}
      JWT_SECRET: ${JWT_SECRET}
      URL: "http://localhost:8100"
      http.cors.enabled: "true"
      http.cors.allow-origin: "http://localhost:8100"
      http.cors.allow-headers: "X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      http.cors.allow-credentials: "true"
  backend-feed:
    image: virenderm01/udacity-restapi-feed
    volumes:
      - //c/Users/viren/.aws://root/.aws
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      POSTGRES_HOST: ${POSTGRES_HOST}
      AWS_REGION: ${AWS_REGION}
      AWS_PROFILE: $${AWS_PROFILE}
      AWS_BUCKET: ${AWS_MEDIA_BUCKET}
      JWT_SECRET: ${JWT_SECRET}
      URL: "http://localhost:8100"
      http.cors.enabled: "true"
      http.cors.allow-origin: "http://localhost:8100"
      http.cors.allow-headers: "X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      http.cors.allow-credentials: "true"
  frontend:
    image: virenderm01/udacity-frontend:local
    ports:
      - "8100:80"
